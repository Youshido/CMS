<div class="col-md-12">
    <ul class="list-group attribute-list tags">
        {%  if moduleConfig.attributes is defined and moduleConfig.attributes %}
            {% for attr in moduleConfig.attributes %}
                {% include 'YCMSBundle:_attributes:' ~ attr.type ~'.html.twig' with { type : attr.type } %}
            {% endfor %}
        {% endif %}
    </ul>
</div>

<input type="hidden" name="blocksSerialized" id="blocks-serialized" value="">

<div class="btn-group">
    <button type="button" class="btn btn-default">Add attribute</button>
    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
        <span class="caret"></span>
        <span class="sr-only">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu add-attribute-handler" role="menu">
        {% for type, label in adminContext.activeModule.attributeTypes %}
            <li>
                <a href="#" data-type="{{ type }}">{{ label|capitalize }}</a>
            </li>
        {% endfor %}
    </ul>
</div>

<script>
    $(function(){
        var $attributeCollection = $('.list-group.attribute-list');
        var $blockInput = $('#blocks-serialized');
        var $blocksForm = $('#form-list-view');

        $('.add-attribute-handler').find('a').click(function(e){
            e.preventDefault();

            $.ajax({
                url: '{{ path('cms.addAttributeForm') }}',
                dataType: 'html',
                data: {
                    type: $(this).data('type')
                }
            }).success(function(response){
                $attributeCollection.append(response);
            });
        });

        $(document).on('click', '.delete-attribute-handler', function(e){
            $(this).closest('.list-group-item').remove();
            e.preventDefault();
        });

        $blocksForm.on('submit', function(e) {
            var blocks = [];

            $attributeCollection.find('.list-group-item.attribute-item').each(function(){
                var blockItem = {};

                $(this).find('input, select, textarea').each(function(){
                    if($(this).closest('.type-options').length){
                        if(!$(this).closest('.type-options').hasClass('ignore')){
                            var $value = getValueOfItem(this);
                            var $key = $(this).attr('name');

                            if($key.indexOf('[]', this.length - '[]'.length) !== -1){
                                $key = $key.substr(0, $key.length - '[]'.length);

                                if(!blockItem.hasOwnProperty($key)){
                                    blockItem[$key] = [];
                                }

                                blockItem[$key].push($value);
                            }else{
                                blockItem[$key] = $value;
                            }
                        }
                    }else{
                        blockItem[$(this).attr('name')] = getValueOfItem(this);
                    }
                });

                blocks.push(blockItem)
            });

            $blockInput.val(JSON.stringify(blocks));
        });

        function getValueOfItem(el)
        {
            var $value = $(el).val();
            if($(el).attr('type') == 'checkbox'){
                $value = $(el).is(':checked');
            }

            return $value;
        }

        $(document).on('change', '.change-attribute-type-handler', function(){
            var $value =  $(this).val();
            var $parent = $(this).closest('.list-group-item');

            $parent.find('.type-options').addClass('ignore').hide();
            $parent.find('.type-options[data-type=' + $value + ']').removeClass('ignore').show();
        });

        $(document).on('click', '.remove-row-handler', function(){
            $(this).closest('.item-row').remove();
        });

        $(document).on('click', '.add-row-handler', function(){
            $(this).closest('.form-group').find('.row-items').append('<div class="item-row">' +
                    '<input type="text" name="config[items][key][]">' +
                    '<input type="text" name="config[items][value][]">' +
                    '<span class="remove-row-handler">x</span>' +
                    '</div>');
        });
    });
</script>